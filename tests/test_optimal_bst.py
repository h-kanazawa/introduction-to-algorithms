# -*- coding: utf-8 -*-

from src.optimal_bst import *


def test_optimal_bst():
    p = [0.15, 0.10, 0.05, 0.10, 0.20]
    q = [0.05, 0.10, 0.05, 0.05, 0.05, 0.10]
    n = len(p)
    e, w, root = optimal_bst(p, q, n)

    actual_e = [[round(x, 2) for x in row] for row in e]
    actual_w = [[round(x, 2) for x in row] for row in w]

    expected_e = [
        [0.05, 0.45, 0.90, 1.25, 1.75, 2.75],
        [0.00, 0.10, 0.40, 0.70, 1.20, 2.00],
        [0.00, 0.00, 0.05, 0.25, 0.60, 1.30],
        [0.00, 0.00, 0.00, 0.05, 0.30, 0.90],
        [0.00, 0.00, 0.00, 0.00, 0.05, 0.50],
        [0.00, 0.00, 0.00, 0.00, 0.00, 0.10]
    ]
    expected_w = [
        [0.05, 0.30, 0.45, 0.55, 0.70, 1.00],
        [0.00, 0.10, 0.25, 0.35, 0.50, 0.80],
        [0.00, 0.00, 0.05, 0.15, 0.30, 0.60],
        [0.00, 0.00, 0.00, 0.05, 0.20, 0.50],
        [0.00, 0.00, 0.00, 0.00, 0.05, 0.35],
        [0.00, 0.00, 0.00, 0.00, 0.00, 0.10]
    ]
    expected_root = [
        [1, 1, 2, 2, 2],
        [0, 2, 2, 2, 4],
        [0, 0, 3, 4, 5],
        [0, 0, 0, 4, 5],
        [0, 0, 0, 0, 5]
    ]

    assert actual_e == expected_e
    assert actual_w == expected_w
    assert root == expected_root
